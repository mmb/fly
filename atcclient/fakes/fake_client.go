// This file was generated by counterfeiter
package fakes

import (
	"sync"

	"github.com/concourse/fly/atcclient"
)

type FakeClient struct {
	MakeRequestStub        func(result interface{}, requestName string, params map[string]string, queries map[string]string) error
	makeRequestMutex       sync.RWMutex
	makeRequestArgsForCall []struct {
		result      interface{}
		requestName string
		params      map[string]string
		queries     map[string]string
	}
	makeRequestReturns struct {
		result1 error
	}
}

func (fake *FakeClient) MakeRequest(result interface{}, requestName string, params map[string]string, queries map[string]string) error {
	fake.makeRequestMutex.Lock()
	fake.makeRequestArgsForCall = append(fake.makeRequestArgsForCall, struct {
		result      interface{}
		requestName string
		params      map[string]string
		queries     map[string]string
	}{result, requestName, params, queries})
	fake.makeRequestMutex.Unlock()
	if fake.MakeRequestStub != nil {
		return fake.MakeRequestStub(result, requestName, params, queries)
	} else {
		return fake.makeRequestReturns.result1
	}
}

func (fake *FakeClient) MakeRequestCallCount() int {
	fake.makeRequestMutex.RLock()
	defer fake.makeRequestMutex.RUnlock()
	return len(fake.makeRequestArgsForCall)
}

func (fake *FakeClient) MakeRequestArgsForCall(i int) (interface{}, string, map[string]string, map[string]string) {
	fake.makeRequestMutex.RLock()
	defer fake.makeRequestMutex.RUnlock()
	return fake.makeRequestArgsForCall[i].result, fake.makeRequestArgsForCall[i].requestName, fake.makeRequestArgsForCall[i].params, fake.makeRequestArgsForCall[i].queries
}

func (fake *FakeClient) MakeRequestReturns(result1 error) {
	fake.MakeRequestStub = nil
	fake.makeRequestReturns = struct {
		result1 error
	}{result1}
}

var _ atcclient.Client = new(FakeClient)
